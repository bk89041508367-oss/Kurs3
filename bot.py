import requests
import asyncio
from datetime import datetime
from telegram import Bot
from telegram.constants import ParseMode

# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
BOT_TOKEN = "7984110017:AAEopXIz-0wFOsXlOeWeLvJTzlijxyPLyrU"  # –í–∞—à —Ç–æ–∫–µ–Ω
CHANNEL_ID = "@FinRadar67"  # –í–∞—à –∫–∞–Ω–∞–ª

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
previous_rates = {}

def get_usd_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å USD/RUB —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º"""
    try:
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        current_rate = data['Valute']['USD']['Value']
        previous_rate = data['Valute']['USD']['Previous']
        
        # –†–∞—Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
        change = current_rate - previous_rate
        change_percent = (change / previous_rate) * 100
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        previous_rates['usd'] = current_rate
        
        if change_percent > 0:
            change_str = f"(+{change_percent:+.1f}%)"
        else:
            change_str = f"({change_percent:+.1f}%)"
            
        return f"{current_rate:.2f} ‚ÇΩ {change_str}"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_btc_usd():
    """–ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å BTC —á–µ—Ä–µ–∑ —Ä–∞—Å—á–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ fallback
        btc_price = 110000  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        return f"{btc_price/1000:.1f}K"
    except:
        return "‚ùå"

def get_btc_rub():
    """–ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å BTC/RUB —á–µ—Ä–µ–∑ USD/RUB"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π USD/RUB
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        usd_rate = data['Valute']['USD']['Value']
        
        # BTC –≤ USD (–ø—Ä–∏–º–µ—Ä–Ω–æ)
        btc_usd = 110000
        btc_rub = btc_usd * usd_rate
        
        return f"{btc_rub:,.0f} ‚ÇΩ".replace(",", " ")
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_ton_rub():
    """–ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å TON —á–µ—Ä–µ–∑ USD/RUB"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π USD/RUB
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        usd_rate = data['Valute']['USD']['Value']
        
        # TON –≤ USD (–ø—Ä–∏–º–µ—Ä–Ω–æ)
        ton_usd = 6.50  # –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å
        ton_rub = ton_usd * usd_rate
        
        return f"{ton_rub:.2f} ‚ÇΩ"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_gold_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å –∑–æ–ª–æ—Ç–∞ –≤ —Ä—É–±–ª—è—Ö"""
    try:
        # –ö—É—Ä—Å –∑–æ–ª–æ—Ç–∞ –≤ USD (–ø—Ä–∏–º–µ—Ä–Ω—ã–π)
        gold_usd = 1950.50
        
        # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å USD/RUB
        usd_response = requests.get("https://www.cbr-xml-daily.ru/daily_json.js", timeout=10)
        usd_data = usd_response.json()
        usd_rate = usd_data['Valute']['USD']['Value']
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ä—É–±–ª–∏
        gold_rub = gold_usd * usd_rate
        
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        change_str = "(+0.0%)"
        
        return f"{gold_rub:,.0f} ‚ÇΩ {change_str}".replace(",", " ")
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_eur_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å EUR/RUB"""
    try:
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        current_rate = data['Valute']['EUR']['Value']
        previous_rate = data['Valute']['EUR']['Previous']
        
        # –†–∞—Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
        change = current_rate - previous_rate
        change_percent = (change / previous_rate) * 100
        
        if change_percent > 0:
            change_str = f"(+{change_percent:+.1f}%)"
        else:
            change_str = f"({change_percent:+.1f}%)"
            
        return f"{current_rate:.2f} ‚ÇΩ {change_str}"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_cny_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å CNY/RUB"""
    try:
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        current_rate = data['Valute']['CNY']['Value']
        previous_rate = data['Valute']['CNY']['Previous']
        
        # –†–∞—Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
        change = current_rate - previous_rate
        change_percent = (change / previous_rate) * 100
        
        if change_percent > 0:
            change_str = f"(+{change_percent:+.1f}%)"
        else:
            change_str = f"({change_percent:+.1f}%)"
            
        return f"{current_rate:.2f} ‚ÇΩ {change_str}"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_thb_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å THB/RUB"""
    try:
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        current_rate = data['Valute']['THB']['Value']
        previous_rate = data['Valute']['THB']['Previous']
        
        # –†–∞—Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
        change = current_rate - previous_rate
        change_percent = (change / previous_rate) * 100
        
        if change_percent > 0:
            change_str = f"(+{change_percent:+.1f}%)"
        else:
            change_str = f"({change_percent:+.1f}%)"
            
        return f"{current_rate:.4f} ‚ÇΩ {change_str}"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def get_vnd_rub():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å 1000 VND –∫ RUB"""
    try:
        url = "https://www.cbr-xml-daily.ru/daily_json.js"
        response = requests.get(url, timeout=10)
        data = response.json()
        
        usd_rate = data['Valute']['USD']['Value']
        rub_per_1000vnd = (usd_rate / 23000) * 1000
        
        return f"1000‚Ç´ = {rub_per_1000vnd:.2f} ‚ÇΩ"
    except:
        return "‚ùå –û—à–∏–±–∫–∞"

def create_message():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏"""
    usd = get_usd_rub()
    eur = get_eur_rub()
    cny = get_cny_rub()
    thb = get_thb_rub()
    vnd = get_vnd_rub()
    btc_usd = get_btc_usd()
    btc_rub = get_btc_rub()
    ton = get_ton_rub()
    gold = get_gold_rub()
    
    # –í—Ä–µ–º—è
    msk_time = datetime.now().strftime("%H:%M:%S %d.%m.%Y")
    from datetime import timedelta
    irk_time = (datetime.now() + timedelta(hours=5)).strftime("%H:%M:%S %d.%m.%Y")
    
    usd_value = usd.split()[0]
    ton_value = ton.split()[0]
    
    message = f"""
üíµUSD: {usd_value} üíéTON: {ton_value} 
‚ÇøBTC: {btc_usd}$

üìä –ê–ö–¢–£–ê–õ–¨–ù–´–ï –ö–£–†–°–´

üíµ USD/RUB: {usd}
üí∂ EUR/RUB: {eur}
üá®üá≥ CNY/RUB: {cny}
üáπüá≠ THB/RUB: {thb}
üáªüá≥ VND/RUB: {vnd}

‚Çø  BTC/RUB: {btc_rub}  
üíé TON/RUB: {ton}
ü•á –ó–æ–ª–æ—Ç–æ/RUB: {gold}

–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
üïê –ú–æ—Å–∫–≤–∞: {msk_time}
üïê –ò—Ä–∫—É—Ç—Å–∫: {irk_time}
"""
    return message

# === –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø ===
async def check_bot_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    
    try:
        bot = Bot(token=BOT_TOKEN)
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{me.username} ({me.first_name})")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

# === –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê ===
async def main():
    print("=" * 60)
    print("üí∞ TELEGRAM –ë–û–¢ –î–õ–Ø –ö–£–†–°–û–í –í–ê–õ–Æ–¢")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if "–í–ê–®_–¢–û–ö–ï–ù" in BOT_TOKEN or "–≤–∞—à_–∫–∞–Ω–∞–ª" in CHANNEL_ID:
        print("‚ùå –ó–ê–ú–ï–ù–ò–¢–ï BOT_TOKEN –∏ CHANNEL_ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not await check_bot_connection():
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É
    bot = Bot(token=BOT_TOKEN)
    
    print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª...")
    try:
        message = await bot.send_message(
            chat_id=CHANNEL_ID,
            text=create_message(),
            parse_mode=ParseMode.MARKDOWN
        )
        
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        
        while True:
            await asyncio.sleep(300)  # 5 –º–∏–Ω—É—Ç
            await bot.edit_message_text(
                chat_id=CHANNEL_ID,
                message_id=message.message_id,
                text=create_message(),
                parse_mode=ParseMode.MARKDOWN
            )
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":

    asyncio.run(main())
